<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0915.2101                               -->
<workbook original-version='10.3' source-build='10.3.3 (10300.17.0915.2101)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' inline='true' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LabExercise_Dashboard-RawData_v1' name='excel-direct.06uz1cm1uj4bhf12cr44t1p5dofe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/fzhan/Desktop/BI/tableau/LabExercise_Dashboard-RawData_v1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.06uz1cm1uj4bhf12cr44t1p5dofe' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:L2156:no:A1:L2156:0' header='yes' outcome='6'>
            <column datatype='integer' name='Order_ID' ordinal='0' />
            <column datatype='integer' name='Order_Date_Year' ordinal='1' />
            <column datatype='integer' name='Order_Date_Month' ordinal='2' />
            <column datatype='date' name='Order_Date_Day' ordinal='3' />
            <column datatype='real' name='Order_Price_Total' ordinal='4' />
            <column datatype='string' name='Customer_Name' ordinal='5' />
            <column datatype='string' name='Customer_Country' ordinal='6' />
            <column datatype='string' name='Product_Name' ordinal='7' />
            <column datatype='string' name='Product_Category' ordinal='8' />
            <column datatype='real' name='Product_Order_Unit_Price' ordinal='9' />
            <column datatype='integer' name='Product_Order_Quantity' ordinal='10' />
            <column datatype='real' name='Product_Order_Price_Total' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order_ID]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Order_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order_Date_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order_Date_Year]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Order_Date_Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order_Date_Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order_Date_Month]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Order_Date_Month</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order_Date_Day</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order_Date_Day]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Order_Date_Day</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order_Price_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Order_Price_Total]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Order_Price_Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer_Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Customer_Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer_Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer_Country]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Customer_Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product_Name]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Product_Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product_Category]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Product_Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Order_Unit_Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product_Order_Unit_Price]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Product_Order_Unit_Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Order_Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Product_Order_Quantity]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Product_Order_Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Order_Price_Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product_Order_Price_Total]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Product_Order_Price_Total</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L2156:no:A1:L2156:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Customer Name (group) - Split 4' datatype='string' name='[Customer Name (group) - Split 4]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Customer Name (group)]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Customer Name (group)], &quot;,&quot;, 3 ) )' />
      </column>
      <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Customer_Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;'>
            <value>&quot;Bottom-Dollar Markets&quot;</value>
            <value>&quot;Ernst Handel&quot;</value>
            <value>&quot;Folk och fä HB&quot;</value>
            <value>&quot;Hanari Carnes&quot;</value>
            <value>&quot;Hungry Owl All-Night Grocers&quot;</value>
            <value>&quot;Königlich Essen&quot;</value>
            <value>&quot;QUICK-Stop&quot;</value>
            <value>&quot;Rattlesnake Canyon Grocery&quot;</value>
            <value>&quot;Save-a-lot Markets&quot;</value>
            <value>&quot;White Clover Markets&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Customer Country' datatype='string' name='[Customer_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order Date Day' datatype='date' name='[Order_Date_Day]' role='dimension' type='ordinal' />
      <column caption='Order Date Month' datatype='integer' name='[Order_Date_Month]' role='dimension' type='quantitative' />
      <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
      <column caption='Order ID' datatype='integer' name='[Order_ID]' role='dimension' type='ordinal' />
      <column caption='Order Price Total' datatype='real' name='[Order_Price_Total]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
            <value>&quot;Alice Mutton&quot;</value>
            <value>&quot;Camembert Pierrot&quot;</value>
            <value>&quot;Côte de Blaye&quot;</value>
            <value>&quot;Gnocchi di nonna Alice&quot;</value>
            <value>&quot;Ikura&quot;</value>
            <value>&quot;Manjimup Dried Apples&quot;</value>
            <value>&quot;Raclette Courdavault&quot;</value>
            <value>&quot;Tarte au sucre&quot;</value>
            <value>&quot;Thüringer Rostbratwurst&quot;</value>
            <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Product Category' datatype='string' name='[Product_Category]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
      <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
      <column caption='Product Order Quantity' datatype='integer' name='[Product_Order_Quantity]' role='measure' type='quantitative' />
      <column caption='Product Order Unit Price' datatype='real' name='[Product_Order_Unit_Price]' role='measure' type='quantitative' />
      <column-instance column='[Order_Date_Day]' derivation='Month' name='[mn:Order_Date_Day:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Customer_Name]' derivation='None' name='[none:Customer_Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order_Date_Day]' derivation='Year' name='[yr:Order_Date_Day:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Customer Name (group),Customer Name)' hidden='true' name='[Action (Customer Name (group),Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name (group)]' />
          <groupfilter function='level-members' level='[Customer_Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name)' hidden='true' name='[Action (Customer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer_Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Date Year)' hidden='true' name='[Action (Order Date Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Order_Date_Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Name (group),Product Name)' hidden='true' name='[Action (Product Name (group),Product Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product Name (group)]' />
          <groupfilter function='level-members' level='[Product_Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Name)' hidden='true' name='[Action (Product Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Product_Name]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date Day),MONTH(Order Date Day))' hidden='true' name='[Action (YEAR(Order Date Day),MONTH(Order Date Day))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order_Date_Day:ok]' />
          <groupfilter function='level-members' level='[mn:Order_Date_Day:ok]' />
        </groupfilter>
      </group>
      <group name='[top 10 customers in 2013]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Bottom-Dollar Markets&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Ernst Handel&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Folk och fä HB&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Hanari Carnes&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Hungry Owl All-Night Grocers&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Königlich Essen&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;QUICK-Stop&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Rattlesnake Canyon Grocery&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Save-a-lot Markets&quot;' />
          <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;White Clover Markets&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.543089' group-percentage='0.0536585' measure-ordering='alphabetic' measure-percentage='0.403252' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Order_Date_Year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2011</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2012</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Order_Date_Day:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2011</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2012</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='top 10 customers in 2013' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='top 10 customers in 2013' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='top 10 products in 2013' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Product Name (group)' />
        <param name='target' value='top 10 products in 2013' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sales region distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;'>
                  <value>&quot;Bottom-Dollar Markets&quot;</value>
                  <value>&quot;Ernst Handel&quot;</value>
                  <value>&quot;Folk och fä HB&quot;</value>
                  <value>&quot;Hanari Carnes&quot;</value>
                  <value>&quot;Hungry Owl All-Night Grocers&quot;</value>
                  <value>&quot;Königlich Essen&quot;</value>
                  <value>&quot;QUICK-Stop&quot;</value>
                  <value>&quot;Rattlesnake Canyon Grocery&quot;</value>
                  <value>&quot;Save-a-lot Markets&quot;</value>
                  <value>&quot;White Clover Markets&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer Country' datatype='string' name='[Customer_Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
                  <value>&quot;Alice Mutton&quot;</value>
                  <value>&quot;Camembert Pierrot&quot;</value>
                  <value>&quot;Côte de Blaye&quot;</value>
                  <value>&quot;Gnocchi di nonna Alice&quot;</value>
                  <value>&quot;Ikura&quot;</value>
                  <value>&quot;Manjimup Dried Apples&quot;</value>
                  <value>&quot;Raclette Courdavault&quot;</value>
                  <value>&quot;Tarte au sucre&quot;</value>
                  <value>&quot;Thüringer Rostbratwurst&quot;</value>
                  <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Customer_Country]' derivation='None' name='[none:Customer_Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[sum:Product_Order_Price_Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Customer Name (group)]' member='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;' />
              <groupfilter function='member' level='[Customer_Name]' member='&quot;Save-a-lot Markets&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Name (group)]' />
              <groupfilter function='level-members' level='[Product_Name]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Country:nk]' />
              <color column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' />
              <geometry column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Latitude (generated)]</rows>
        <cols>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
            <column caption='Product Category' datatype='string' name='[Product_Category]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Category]' derivation='None' name='[none:Product_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[sum:Product_Order_Price_Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' included-values='in-range'>
            <min>2013</min>
            <max>2013</max>
          </filter>
          <sort class='computed' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Category:nk]' direction='DESC' using='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' />
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]</rows>
        <cols>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='sales YOY growth in 2013'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;'>
                  <value>&quot;Bottom-Dollar Markets&quot;</value>
                  <value>&quot;Ernst Handel&quot;</value>
                  <value>&quot;Folk och fä HB&quot;</value>
                  <value>&quot;Hanari Carnes&quot;</value>
                  <value>&quot;Hungry Owl All-Night Grocers&quot;</value>
                  <value>&quot;Königlich Essen&quot;</value>
                  <value>&quot;QUICK-Stop&quot;</value>
                  <value>&quot;Rattlesnake Canyon Grocery&quot;</value>
                  <value>&quot;Save-a-lot Markets&quot;</value>
                  <value>&quot;White Clover Markets&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
            <column caption='Order Date Day' datatype='date' name='[Order_Date_Day]' role='dimension' type='ordinal' />
            <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
                  <value>&quot;Alice Mutton&quot;</value>
                  <value>&quot;Camembert Pierrot&quot;</value>
                  <value>&quot;Côte de Blaye&quot;</value>
                  <value>&quot;Gnocchi di nonna Alice&quot;</value>
                  <value>&quot;Ikura&quot;</value>
                  <value>&quot;Manjimup Dried Apples&quot;</value>
                  <value>&quot;Raclette Courdavault&quot;</value>
                  <value>&quot;Tarte au sucre&quot;</value>
                  <value>&quot;Thüringer Rostbratwurst&quot;</value>
                  <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Order_Date_Day]' derivation='Month' name='[mn:Order_Date_Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[pcdf:sum:Product_Order_Price_Total:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]' ordering-field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Order_Date_Day]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Order_Date_Day]' derivation='Year' name='[yr:Order_Date_Day:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Customer Name (group)]' member='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;' />
              <groupfilter function='member' level='[Customer_Name]' member='&quot;Save-a-lot Markets&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Name (group)]' />
              <groupfilter function='level-members' level='[Product_Name]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' included-values='in-range'>
            <min>2012</min>
            <max>2013</max>
          </filter>
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' scope='rows' value='% Sales developed rate' />
            <format attr='subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[mn:Order_Date_Day:ok]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]</rows>
        <cols>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[mn:Order_Date_Day:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='sales developed in 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;'>
                  <value>&quot;Bottom-Dollar Markets&quot;</value>
                  <value>&quot;Ernst Handel&quot;</value>
                  <value>&quot;Folk och fä HB&quot;</value>
                  <value>&quot;Hanari Carnes&quot;</value>
                  <value>&quot;Hungry Owl All-Night Grocers&quot;</value>
                  <value>&quot;Königlich Essen&quot;</value>
                  <value>&quot;QUICK-Stop&quot;</value>
                  <value>&quot;Rattlesnake Canyon Grocery&quot;</value>
                  <value>&quot;Save-a-lot Markets&quot;</value>
                  <value>&quot;White Clover Markets&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
            <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
                  <value>&quot;Alice Mutton&quot;</value>
                  <value>&quot;Camembert Pierrot&quot;</value>
                  <value>&quot;Côte de Blaye&quot;</value>
                  <value>&quot;Gnocchi di nonna Alice&quot;</value>
                  <value>&quot;Ikura&quot;</value>
                  <value>&quot;Manjimup Dried Apples&quot;</value>
                  <value>&quot;Raclette Courdavault&quot;</value>
                  <value>&quot;Tarte au sucre&quot;</value>
                  <value>&quot;Thüringer Rostbratwurst&quot;</value>
                  <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[pcdf:sum:Product_Order_Price_Total:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[sum:Product_Order_Price_Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Customer Name (group)]' member='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;' />
              <groupfilter function='member' level='[Customer_Name]' member='&quot;Save-a-lot Markets&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Name (group)]' />
              <groupfilter function='level-members' level='[Product_Name]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='Sales' />
            <format attr='subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]' scope='rows' value='% Sales developed' />
            <format attr='subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk] + [federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk])</rows>
        <cols>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Calibri,sans-serif'>sales developed in 2013 – compared to the year before</run>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
                      <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>2013</value>
                    <value>0.2643827504359893</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='20' y='-446' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='top 10 customers in 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;'>
                  <value>&quot;Bottom-Dollar Markets&quot;</value>
                  <value>&quot;Ernst Handel&quot;</value>
                  <value>&quot;Folk och fä HB&quot;</value>
                  <value>&quot;Hanari Carnes&quot;</value>
                  <value>&quot;Hungry Owl All-Night Grocers&quot;</value>
                  <value>&quot;Königlich Essen&quot;</value>
                  <value>&quot;QUICK-Stop&quot;</value>
                  <value>&quot;Rattlesnake Canyon Grocery&quot;</value>
                  <value>&quot;Save-a-lot Markets&quot;</value>
                  <value>&quot;White Clover Markets&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
            <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
                  <value>&quot;Alice Mutton&quot;</value>
                  <value>&quot;Camembert Pierrot&quot;</value>
                  <value>&quot;Côte de Blaye&quot;</value>
                  <value>&quot;Gnocchi di nonna Alice&quot;</value>
                  <value>&quot;Ikura&quot;</value>
                  <value>&quot;Manjimup Dried Apples&quot;</value>
                  <value>&quot;Raclette Courdavault&quot;</value>
                  <value>&quot;Tarte au sucre&quot;</value>
                  <value>&quot;Thüringer Rostbratwurst&quot;</value>
                  <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Customer_Name]' derivation='None' name='[none:Customer_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[sum:Product_Order_Price_Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Name (group)]' />
              <groupfilter function='level-members' level='[Product_Name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Bottom-Dollar Markets&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Ernst Handel&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Folk och fä HB&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Hanari Carnes&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Hungry Owl All-Night Grocers&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Königlich Essen&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;QUICK-Stop&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Rattlesnake Canyon Grocery&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;Save-a-lot Markets&quot;' />
              <groupfilter function='member' level='[none:Customer_Name:nk]' member='&quot;White Clover Markets&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]' direction='DESC' using='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' />
          <filter class='quantitative' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' included-values='in-range-or-null'>
            <min>2013</min>
            <max>2013</max>
          </filter>
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='Sales' />
            <format attr='subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Customer Name (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]</rows>
        <cols>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='top 10 products YOY growth'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column caption='Order Date Day' datatype='date' name='[Order_Date_Day]' role='dimension' type='ordinal' />
            <column caption='Order Date Month' datatype='integer' name='[Order_Date_Month]' role='dimension' type='quantitative' />
            <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
                  <value>&quot;Alice Mutton&quot;</value>
                  <value>&quot;Camembert Pierrot&quot;</value>
                  <value>&quot;Côte de Blaye&quot;</value>
                  <value>&quot;Gnocchi di nonna Alice&quot;</value>
                  <value>&quot;Ikura&quot;</value>
                  <value>&quot;Manjimup Dried Apples&quot;</value>
                  <value>&quot;Raclette Courdavault&quot;</value>
                  <value>&quot;Tarte au sucre&quot;</value>
                  <value>&quot;Thüringer Rostbratwurst&quot;</value>
                  <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Order_Date_Day]' derivation='Month' name='[mn:Order_Date_Day:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order_Date_Month]' derivation='None' name='[none:Order_Date_Month:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Name]' derivation='None' name='[none:Product_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[pcdf:sum:Product_Order_Price_Total:qk:2]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]' ordering-field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Order_Date_Day]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Order_Date_Day]' derivation='Year' name='[yr:Order_Date_Day:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Product Name (group)]' />
              <groupfilter function='level-members' level='[Product_Name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (YEAR(Order Date Day),MONTH(Order Date Day))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[mn:Order_Date_Day:ok]' member='3' />
                <groupfilter function='member' level='[yr:Order_Date_Day:ok]' member='2013' />
              </groupfilter>
              <order>
                <hierarchy name='[yr:Order_Date_Day:ok]' />
                <hierarchy name='[mn:Order_Date_Day:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Product Name (group)]'>
            <groupfilter function='level-members' level='[Product Name (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Month:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Order_Date_Month:ok]' member='3' />
              <groupfilter function='member' level='[none:Order_Date_Month:ok]' member='9' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' included-values='in-range'>
            <min>2012</min>
            <max>2013</max>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Order_Date_Day:ok]' />
              <groupfilter function='member' level='[yr:Order_Date_Day:ok]' member='2012' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Month:ok]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Product Name (group)]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (YEAR(Order Date Day),MONTH(Order Date Day))]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Product Name (group),Product Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' num-steps='100' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]</rows>
        <cols>([federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok] / [federated.0w5c0dq0md1dq11d85dp91ls7vs7].[mn:Order_Date_Day:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='top 10 products in 2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (LabExercise_Dashboard-RawData_v1)' name='federated.0w5c0dq0md1dq11d85dp91ls7vs7' />
          </datasources>
          <datasource-dependencies datasource='federated.0w5c0dq0md1dq11d85dp91ls7vs7'>
            <column datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;'>
                  <value>&quot;Bottom-Dollar Markets&quot;</value>
                  <value>&quot;Ernst Handel&quot;</value>
                  <value>&quot;Folk och fä HB&quot;</value>
                  <value>&quot;Hanari Carnes&quot;</value>
                  <value>&quot;Hungry Owl All-Night Grocers&quot;</value>
                  <value>&quot;Königlich Essen&quot;</value>
                  <value>&quot;QUICK-Stop&quot;</value>
                  <value>&quot;Rattlesnake Canyon Grocery&quot;</value>
                  <value>&quot;Save-a-lot Markets&quot;</value>
                  <value>&quot;White Clover Markets&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
            <column caption='Order Date Year' datatype='integer' name='[Order_Date_Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Product Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Product_Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Alice Mutton, Camembert Pierrot, Côte de Blaye and 7 more&quot;'>
                  <value>&quot;Alice Mutton&quot;</value>
                  <value>&quot;Camembert Pierrot&quot;</value>
                  <value>&quot;Côte de Blaye&quot;</value>
                  <value>&quot;Gnocchi di nonna Alice&quot;</value>
                  <value>&quot;Ikura&quot;</value>
                  <value>&quot;Manjimup Dried Apples&quot;</value>
                  <value>&quot;Raclette Courdavault&quot;</value>
                  <value>&quot;Tarte au sucre&quot;</value>
                  <value>&quot;Thüringer Rostbratwurst&quot;</value>
                  <value>&quot;Uncle Bob&apos;s Organic Dried Pears&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
            <column caption='Product Order Price Total' datatype='real' name='[Product_Order_Price_Total]' role='measure' type='quantitative' />
            <column-instance column='[Order_Date_Year]' derivation='None' name='[none:Order_Date_Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product_Name]' derivation='None' name='[none:Product_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product_Order_Price_Total]' derivation='Sum' name='[sum:Product_Order_Price_Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Customer Name (group)]' member='&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;' />
              <groupfilter function='member' level='[Customer_Name]' member='&quot;Save-a-lot Markets&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' included-values='in-range-or-null'>
            <min>2013</min>
            <max>2013</max>
          </filter>
          <filter class='categorical' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Alice Mutton&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Camembert Pierrot&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Côte de Blaye&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Gnocchi di nonna Alice&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Ikura&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Manjimup Dried Apples&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Raclette Courdavault&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Tarte au sucre&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Thüringer Rostbratwurst&quot;' />
              <groupfilter function='member' level='[none:Product_Name:nk]' member='&quot;Uncle Bob&apos;s Organic Dried Pears&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]' direction='DESC' using='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' />
          <slices>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]</column>
            <column>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Action (Customer Name (group),Customer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='Sales' />
            <format attr='subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Product Name (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]</rows>
        <cols>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='4' type='layout-basic' w='87692' x='0' y='0'>
              <zone h='50000' id='1' name='sales developed in 2013' w='43846' x='0' y='0' />
              <zone h='50000' id='3' name='top 10 customers in 2013' w='21923' x='43846' y='0' />
              <zone h='50000' id='9' name='top 10 products in 2013' w='21923' x='65769' y='0' />
              <zone h='50000' id='12' name='Sales region distribution' w='43846' x='0' y='50000' />
              <zone h='50000' id='14' name='sales YOY growth in 2013' w='43846' x='43846' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='5' is-fixed='true' param='vert' type='layout-flow' w='12308' x='87692' y='0'>
              <zone h='10625' id='13' name='Sales region distribution' pane-specification-id='0' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' type='color' w='12308' x='87692' y='0' />
              <zone h='10500' id='15' name='sales YOY growth in 2013' pane-specification-id='2' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]' type='color' w='12308' x='87692' y='10625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='15' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' param='horz' type='layout-flow' w='84000' x='0' y='0'>
              <zone h='100000' id='4' type='layout-basic' w='84000' x='0' y='0'>
                <zone h='50000' id='1' name='sales developed in 2013' w='42000' x='0' y='0' />
                <zone h='50000' id='12' name='Sales region distribution' w='42000' x='42000' y='50000' />
                <zone h='50000' id='13' name='top 10 customers in 2013' w='42000' x='42000' y='0' />
                <zone h='50000' id='18' name='top 10 products in 2013' w='42000' x='0' y='50000' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='14' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='8000' id='17' name='top 10 customers in 2013' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]' type='highlighter' w='16000' x='84000' y='0' />
              <zone h='7500' id='20' name='top 10 products in 2013' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]' type='highlighter' w='16000' x='84000' y='8000' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='sales developed in 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='top 10 customers in 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Customer Name (group)]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='top 10 products in 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales region distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sales region distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sales developed in 2013'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 10 customers in 2013'>
          <zoom type='entire-view' />
          <highlight field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]' pattern='Königlich Essen' type='highlight'>
            <bucket-selection>
              <bucket>&quot;Königlich Essen&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
        <viewpoint name='top 10 products in 2013'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sales region distribution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sales YOY growth in 2013'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='sales developed in 2013'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='top 10 customers in 2013'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Customer Name (group)]</field>
                    <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]</field>
                    <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[sum:Product_Order_Price_Total:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Bottom-Dollar Markets, Ernst Handel, Folk och fä HB and 7 more&quot;</value>
                  <value>&quot;Save-a-lot Markets&quot;</value>
                  <value>71550.950000000012</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer_Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='top 10 products in 2013'>
          <zoom type='entire-view' />
          <highlight field='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='sales YOY growth in 2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Month:qk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:ok]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[qr:Order_Date_Day:ok]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='top 10 products YOY growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[pcdf:sum:Product_Order_Price_Total:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2012</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Customer Name (group)]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[Product Name (group)]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[io:top 10 customers in 2013:nk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer Name (group) - Split 1:nk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Customer Name (group) - Split 4:nk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Month:qk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Order_Date_Year:ok]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[none:Product_Name:nk]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[qr:Order_Date_Day:ok]</field>
            <field>[federated.0w5c0dq0md1dq11d85dp91ls7vs7].[yr:Order_Date_Day:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales region distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sales YOY growth in 2013' width='192'>
      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
      RP5/xgR1LDR/XsgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sales developed in 2013' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 customers in 2013' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 10 products YOY growth' width='192'>
      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
      D2+Ko/fWeb8EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 products in 2013' width='192'>
      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
      W50E4gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
